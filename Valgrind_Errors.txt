arun@arun-HP-PC:~/Documents/Valgrind/build$ cmake .. && make
-- The C compiler identification is GNU 5.4.0
-- The CXX compiler identification is GNU 5.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found PythonInterp: /usr/bin/python (found version "2.7.12") 
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - not found
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Configuring done
-- Generating done
-- Build files have been written to: /home/arun/Documents/Valgrind/build
Scanning dependencies of target shell-app
[ 10%] Building CXX object app/CMakeFiles/shell-app.dir/main.cpp.o
/home/arun/Documents/Valgrind/app/main.cpp: In function ‘int main()’:
/home/arun/Documents/Valgrind/app/main.cpp:9:5: warning: ‘terminator’ may be used uninitialized in this function [-Wmaybe-uninitialized]
     if( terminator )
     ^
[ 20%] Building CXX object app/CMakeFiles/shell-app.dir/AnalogSensor.cpp.o
[ 30%] Linking CXX executable shell-app
[ 30%] Built target shell-app
Scanning dependencies of target gtest
[ 40%] Building CXX object vendor/googletest/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.o
[ 50%] Linking CXX static library libgtest.a
[ 50%] Built target gtest
Scanning dependencies of target cpp-test
[ 60%] Building CXX object test/CMakeFiles/cpp-test.dir/main.cpp.o
[ 70%] Building CXX object test/CMakeFiles/cpp-test.dir/test.cpp.o
[ 80%] Linking CXX executable cpp-test
[ 80%] Built target cpp-test
Scanning dependencies of target gtest_main
[ 90%] Building CXX object vendor/googletest/googletest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o
[100%] Linking CXX static library libgtest_main.a
[100%] Built target gtest_main
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind ./
app/        CMakeFiles/ test/       vendor/     
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind ./app/
CMakeFiles/ shell-app   
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind ./app/shell-app 
==18941== Memcheck, a memory error detector
==18941== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18941== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==18941== Command: ./app/shell-app
==18941== 
Averaged sensor reading: 10
==18941== Conditional jump or move depends on uninitialised value(s)
==18941==    at 0x401DC7: main (main.cpp:9)
==18941== 
==18941== 
==18941== HEAP SUMMARY:
==18941==     in use at exit: 72,748 bytes in 3 blocks
==18941==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==18941== 
==18941== LEAK SUMMARY:
==18941==    definitely lost: 24 bytes in 1 blocks
==18941==    indirectly lost: 20 bytes in 1 blocks
==18941==      possibly lost: 0 bytes in 0 blocks
==18941==    still reachable: 72,704 bytes in 1 blocks
==18941==         suppressed: 0 bytes in 0 blocks
==18941== Rerun with --leak-check=full to see details of leaked memory
==18941== 
==18941== For counts of detected and suppressed errors, rerun with: -v
==18941== Use --track-origins=yes to see where uninitialised values come from
==18941== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind --tool=helgrind ./
app/        CMakeFiles/ test/       vendor/     
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind --tool=helgrind ./app/
CMakeFiles/ shell-app   
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind --tool=helgrind ./app/shell-app 
==18948== Helgrind, a thread error detector
==18948== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==18948== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==18948== Command: ./app/shell-app
==18948== 
Averaged sensor reading: 10
==18948== 
==18948== For counts of detected and suppressed errors, rerun with: -v
==18948== Use --history-level=approx or =none to gain increased speed, at
==18948== the cost of reduced accuracy of conflicting-access information
==18948== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind --leak-check=full ./
app/        CMakeFiles/ test/       vendor/     
arun@arun-HP-PC:~/Documents/Valgrind/build$ valgrind --leak-check=full ./app/shell-app 
==18957== Memcheck, a memory error detector
==18957== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18957== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==18957== Command: ./app/shell-app
==18957== 
Averaged sensor reading: 10
==18957== Conditional jump or move depends on uninitialised value(s)
==18957==    at 0x401DC7: main (main.cpp:9)
==18957== 
==18957== 
==18957== HEAP SUMMARY:
==18957==     in use at exit: 72,748 bytes in 3 blocks
==18957==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==18957== 
==18957== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==18957==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==18957==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==18957==    by 0x401D9A: main (main.cpp:7)
==18957== 
==18957== LEAK SUMMARY:
==18957==    definitely lost: 24 bytes in 1 blocks
==18957==    indirectly lost: 20 bytes in 1 blocks
==18957==      possibly lost: 0 bytes in 0 blocks
==18957==    still reachable: 72,704 bytes in 1 blocks
==18957==         suppressed: 0 bytes in 0 blocks
==18957== Reachable blocks (those to which a pointer was found) are not shown.
==18957== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==18957== 
==18957== For counts of detected and suppressed errors, rerun with: -v
==18957== Use --track-origins=yes to see where uninitialised values come from
==18957== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

